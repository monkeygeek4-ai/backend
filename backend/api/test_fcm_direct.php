<?php
// backend/test_fcm_direct.php
// –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ FCM —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

require_once __DIR__ . '/lib/Database.php';
require_once __DIR__ . '/lib/FirebaseAdmin.php';

echo "========================================\n";
echo "üß™ –ü–†–Ø–ú–û–ô –¢–ï–°–¢ FCM\n";
echo "========================================\n\n";

try {
    // 1. –ü–æ–ª—É—á–∞–µ–º FCM —Ç–æ–∫–µ–Ω—ã –∏–∑ –ë–î
    echo "1Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ FCM —Ç–æ–∫–µ–Ω–æ–≤ –∏–∑ –ë–î...\n";
    $db = Database::getInstance();
    
    $tokens = $db->fetchAll(
        "SELECT user_id, token, platform FROM fcm_tokens ORDER BY created_at DESC LIMIT 5"
    );
     
    if (empty($tokens)) {
        echo "‚ùå FCM —Ç–æ–∫–µ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ë–î!\n";
        exit(1);
    }
    
    echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: " . count($tokens) . "\n";
    foreach ($tokens as $idx => $tokenData) {
        echo "  [" . ($idx + 1) . "] User ID: {$tokenData['user_id']}, Platform: {$tokenData['platform']}, Token: " . substr($tokenData['token'], 0, 30) . "...\n";
    }
    
    // 2. –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∞
    echo "\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (1-" . count($tokens) . ") [Enter = 1]: ";
    $handle = fopen("php://stdin", "r");
    $line = trim(fgets($handle));
    $selectedIndex = empty($line) ? 0 : intval($line) - 1;
    fclose($handle);
    
    if ($selectedIndex < 0 || $selectedIndex >= count($tokens)) {
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–æ–∫–µ–Ω–∞!\n";
        exit(1);
    }
    
    $selectedToken = $tokens[$selectedIndex]['token'];
    $userId = $tokens[$selectedIndex]['user_id'];
    
    echo "\n========================================\n";
    echo "üì§ –û–¢–ü–†–ê–í–ö–ê –¢–ï–°–¢–û–í–û–ì–û –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø\n";
    echo "========================================\n";
    echo "User ID: $userId\n";
    echo "Token: " . substr($selectedToken, 0, 30) . "...\n";
    echo "========================================\n\n";
    
    // 3. –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–≤–æ–Ω–∫–∞
    $testCallId = 'test-call-' . time();
    $testData = [
        'type' => 'incoming_call',
        'callId' => $testCallId,
        'callerName' => 'Test Caller üß™',
        'callType' => 'audio',
        'callerAvatar' => '',
        'timestamp' => strval(time()),
        'title' => '–¢–µ—Å—Ç–æ–≤—ã–π –∑–≤–æ–Ω–æ–∫ –æ—Ç Test Caller üß™',
        'body' => '–í—Ö–æ–¥—è—â–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π –∑–≤–æ–Ω–æ–∫'
    ];
    
    echo "üì¶ –î–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:\n";
    echo json_encode($testData, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "\n\n";
    
    // 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ FirebaseAdmin
    echo "üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ FirebaseAdmin...\n\n";
    
    $firebaseAdmin = new FirebaseAdmin();
    $result = $firebaseAdmin->sendNotification(
        $selectedToken,
        null, // –ë–ï–ó notification payload –¥–ª—è data-only
        $testData
    );
    
    echo "\n========================================\n";
    if ($result) {
        echo "‚úÖ‚úÖ‚úÖ –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù!\n";
        echo "========================================\n";
        echo "FCM —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é $userId\n";
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ Android —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ - –¥–æ–ª–∂–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è:\n";
        echo "  1. Foreground: Callback –≤ FCMService\n";
        echo "  2. –õ–æ–≥–∏: [FCM] üì© üì© üì© FOREGROUND MESSAGE –ü–û–õ–£–ß–ï–ù–û!\n";
        echo "  3. UI: Overlay —Å –≤—Ö–æ–¥—è—â–∏–º –∑–≤–æ–Ω–∫–æ–º\n";
    } else {
        echo "‚ùå‚ùå‚ùå –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù!\n";
        echo "========================================\n";
        echo "FCM —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ù–ï –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ\n";
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –æ—à–∏–±–∫–∏\n";
    }
    echo "========================================\n";
    
} catch (Exception $e) {
    echo "\n========================================\n";
    echo "‚ùå‚ùå‚ùå EXCEPTION!\n";
    echo "========================================\n";
    echo "Message: " . $e->getMessage() . "\n";
    echo "File: " . $e->getFile() . ":" . $e->getLine() . "\n";
    echo "Trace:\n" . $e->getTraceAsString() . "\n";
    echo "========================================\n";
}
